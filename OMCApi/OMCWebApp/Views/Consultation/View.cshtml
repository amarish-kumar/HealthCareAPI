@model  OMCWebApp.Models.ConsultationViewModel

<style>
    table.conversations td,
    table.conversations th {
        border: 1px solid black;
    }

    table.createConv {
        border: 1px solid black;
    }

    .collapsible {
        background-color: #777;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

        .collapsible:after {
            content: '\002B';
            color: white;
            font-weight: bold;
            float: right;
            margin-left: 5px;
        }

    .active:after {
        content: "\2212";
    }

    .content {
        padding: 0 18px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
        background-color: #f1f1f1;
    }
</style>

<h2>Consultation View</h2>
<b><font color="blue"> Consultation Id: </font></b> @Model.ConversationResponseObject.ConsultationObject.ConsultationId
<br />
<b><font color="blue">Description: </font></b> @Model.ConversationResponseObject.ConsultationObject.ConsultationDescription
<br />
<b><font color="blue">Consultation Status: </font></b>@Model.ConversationResponseObject.ConsultationObject.ConsultationStatus
<br />
<b><font color="blue">Doctor: </font></b> @Model.ConversationResponseObject.ConsultationObject.DoctorName
<br />
<b><font color="blue">Profile: </font></b> @Model.ConversationResponseObject.ConsultationObject.ProfileName
<br />
<b><font color="blue">Package: </font></b> @Model.ConversationResponseObject.ConsultationObject.PackageName
<br />
<b><font color="blue">User: </font></b> @Model.ConversationResponseObject.ConsultationObject.PatientName
<br />

<button class="collapsible">Conversations</button>
<div class="content">
    @if (Model.ConversationResponseObject != null
        && Model.ConversationResponseObject.Conversations != null
        && Model.ConversationResponseObject.Conversations.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
                <th>Id</th>
                <th>Description</th>
                <th>From</th>
                <th>Timestamp</th>
            </thead>

            @foreach (var conversation in Model.ConversationResponseObject.Conversations)
            {
                <tr>
                    <td>@conversation.ConversationId</td>
                    <td>@conversation.ConversationDescription</td>
                    <td>
                        @(conversation.PatientId.HasValue
                                    ? conversation.PatientName
                                    : (conversation.DoctorId.HasValue ? conversation.DoctorName : string.Empty))
                    </td>
                    <td>
                        @(conversation.ConversationCreateDate.HasValue
                                ? conversation.ConversationCreateDate.Value.ToString("dd-MMM-yyyy hh:mm")
                                : string.Empty)
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No conversations recorded</p>
    }
    @Html.Partial("CreateConv", Model.ConversationModelObject)
    <br />
</div>

<button class="collapsible">Reports</button>
<div class="content">
    @if (Model.ConsultationReportResponseObject != null
        && Model.ConsultationReportResponseObject.ConsultationReports != null
        && Model.ConsultationReportResponseObject.ConsultationReports.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
            <th>Id</th>
            <th>Consultation Id</th>
            <th>File Name</th>
            <th>Report Date</th>
            <th>Lab Name</th>
            <th>Description</th>
            <th>Doctor Name</th>
            <th>Country</th>
            <th>Phone Number</th>
            <th>Action</th>
            </thead>

            @foreach (var report in Model.ConsultationReportResponseObject.ConsultationReports)
            {
                <tr>
                    <td>@report.Id</td>
                    <td>@report.ConsultationId</td>
                    <td>@Html.ActionLink(report.FileName, "DownLoadFile", "Consultation", new { consultationReportId = report.Id }, null)   </td>
                    <td>@(report.ReportDate.HasValue ? report.ReportDate.Value.ToString("dd-MMM-yyyy") : string.Empty)</td>
                    <td>@report.LabName</td>
                    <td>@report.Description</td>
                    <td>@report.DoctorName</td>
                    <td>@report.Country</td>
                    <td>@report.DoctorPhoneNumber</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditReport", "Consultation", new { userId = Model.UserId, consultationId = report.ConsultationId, consultationReportId = report.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No reports recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateReport", Model.ReportModelObject)
    }
    <br />
</div>

<button class="collapsible">Surgeries</button>
<div class="content">
    @if (Model.ConsultationSurgeryResponseObject != null
                        && Model.ConsultationSurgeryResponseObject.ConsultationSurgeriesList != null
                        && Model.ConsultationSurgeryResponseObject.ConsultationSurgeriesList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
            <th>Id</th>
            <th>Consultation Id</th>
            <th>Surgery</th>
            <th>Other Description</th>
            <th>Surgery Date</th>
            <th>Action</th>
            </thead>

            @foreach (var surgery in Model.ConsultationSurgeryResponseObject.ConsultationSurgeriesList)
            {
                <tr>
                    <td>@surgery.Id</td>
                    <td>@surgery.ConsultationId</td>
                    <td>@surgery.SurgeryName</td>
                    <td>@surgery.OtherDescription</td>
                    <td>@(surgery.SurgeryDate.HasValue ? surgery.SurgeryDate.Value.ToString("dd-MMM-yyyy") : string.Empty)</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditSurgery", "Consultation", new { userId = Model.UserId, consultationId = surgery.ConsultationId, consultationSurgeryId = surgery.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No surgeries recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateSurgery", Model.SurgeryModelObject)
    }
    <br />
</div>

<button class="collapsible">Cancer Treatments</button>
<div class="content">
    @if (Model.ConsultationCancerTreatmentResponseObject != null
        && Model.ConsultationCancerTreatmentResponseObject.ConsultationCancerTreatmentList != null
        && Model.ConsultationCancerTreatmentResponseObject.ConsultationCancerTreatmentList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
            <th>Id</th>
            <th>Consultation Id</th>
            <th>Cancer Stage</th>
            <th>Cancer Type</th>
            <th>Dignosis Date</th>
            <th>Treatment Type</th>
            <th>Is Treatment On?</th>
            <th>Treatment Completion Date</th>
            <th>Action</th>
            </thead>

            @foreach (var cancerTreatment in Model.ConsultationCancerTreatmentResponseObject.ConsultationCancerTreatmentList)
            {
                <tr>
                    <td>@cancerTreatment.Id</td>
                    <td>@cancerTreatment.ConsultationId</td>
                    <td>@cancerTreatment.CancerStage</td>
                    <td>@cancerTreatment.CancerType</td>
                    <td>@(cancerTreatment.DignosisDate.HasValue ? cancerTreatment.DignosisDate.Value.ToString("dd-MMM-yyyy") : string.Empty)</td>
                    <td>@cancerTreatment.TreatmentType</td>
                    <td>@(cancerTreatment.IsTreatmentOn ? "Yes" : "No")</td>
                    <td>@(cancerTreatment.TreatmentCompletionDate.HasValue ? cancerTreatment.TreatmentCompletionDate.Value.ToString("dd-MMM-yyyy") : string.Empty)</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditCancerTreatment", "Consultation", new { userId = Model.UserId, consultationId = cancerTreatment.ConsultationId, consultationCancerTreatmentId = cancerTreatment.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No cancer treatments recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateCancerTreatment", Model.CancerTreatmentModelObject)
    }
    <br />
</div>

<button class="collapsible">Allergies</button>
<div class="content">
    @if (Model.ConsultationAllergyResponseObject != null
        && Model.ConsultationAllergyResponseObject.ConsultationAllergyList != null
        && Model.ConsultationAllergyResponseObject.ConsultationAllergyList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
                <th>Id</th>
                <th>Consultation Id</th>
                <th>Allergy</th>
                <th>Other Description</th>
                <th>Allergy Start Date</th>
                <th>Treatment</th>
                <th>Action</th>
            </thead>

            @foreach (var allergy in Model.ConsultationAllergyResponseObject.ConsultationAllergyList)
            {
                <tr>
                    <td>@allergy.Id</td>
                    <td>@allergy.ConsultationId</td>
                    <td>@allergy.AllergyName</td>
                    <td>@allergy.OtherDescription</td>
                    <td>@(allergy.AllergyStartDate.HasValue ? allergy.AllergyStartDate.Value.ToString("dd-MMM-yyyy") : string.Empty)</td>
                    <td>@allergy.Treatment</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditAllergy", "Consultation", new { userId = Model.UserId, consultationId = allergy.ConsultationId, consultationAllergyId = allergy.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No allergies recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateAllergy", Model.AllergyModelObject)
    }
    <br />
</div>

<button class="collapsible">Family History</button>
<div class="content">
    @if (Model.ConsultationFamilyHistoryResponseObject != null
        && Model.ConsultationFamilyHistoryResponseObject.ConsultationFamilyHistories != null
        && Model.ConsultationFamilyHistoryResponseObject.ConsultationFamilyHistories.Count() != 0)
    {
        <br />
        <table class="conversations">
        <thead>
            <th>Id</th>
            <th>Consultation Id</th>
            <th>Relationship</th>
            <th>Health Condition</th>
            <th>Other Description</th>
            <th>Current Age</th>
            <th>Age On Condition Start</th>
            <th>Is Alive</th>
            <th>Cause Of Death</th>
            <th>Age On Death</th>
            <th>Action</th>
        </thead>

        @foreach (var familyHistory in Model.ConsultationFamilyHistoryResponseObject.ConsultationFamilyHistories)
        {
            <tr>
                <td>@familyHistory.Id</td>
                <td>@familyHistory.ConsultationId</td>
                <td>@familyHistory.Relationship</td>
                <td>@familyHistory.HealthCondition</td>
                <td>@familyHistory.OtherHealthConditionDescription</td>
                <td>@(familyHistory.CurrentAge.HasValue ? familyHistory.CurrentAge.Value.ToString() : string.Empty)</td>
                <td>@(familyHistory.AgeOnConditionStart.HasValue ? familyHistory.AgeOnConditionStart.Value.ToString() : string.Empty)</td>
                <td>@(familyHistory.IsAlive ? "Yes" : "No")</td>
                <td>@familyHistory.CauseOfDeath</td>
                <td>@(familyHistory.AgeOnDeath.HasValue ? familyHistory.AgeOnDeath.Value.ToString() : string.Empty)</td>                   
                <td>
                    @if (Model.UserRole.ToLower() == "patient")
                    {
                        @Html.ActionLink("Edit", "EditFamilyHistory", "Consultation", new { userId = Model.UserId, consultationId = familyHistory.ConsultationId, consultationFamilyHistoryId = familyHistory.Id }, null)
                    }
                </td>
            </tr>
        }
        </table>
    }
    else
    {
        <p>No family history recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateFamilyHistory", Model.FamilyHistoryModelObject)
    }
    <br />
</div>

<button class="collapsible">Existing Condition</button>
<div class="content">
    @if (Model.ConsultationExistingConditionResponseObject != null
        && Model.ConsultationExistingConditionResponseObject.ConsultationFamilyHistories != null
        && Model.ConsultationExistingConditionResponseObject.ConsultationFamilyHistories.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
                <th>Id</th>
                <th>Consultation Id</th>
                <th>Relationship</th>
                <th>Health Condition</th>
                <th>Other Health Condition Description</th>
                <th>Condition Start Date</th>
                <th>Action</th>
            </thead>

            @foreach (var existingCondition in Model.ConsultationExistingConditionResponseObject.ConsultationFamilyHistories)
            {
                <tr>
                    <td>@existingCondition.Id</td>
                    <td>@existingCondition.ConsultationId</td>
                    <td>@existingCondition.Relationship</td>
                    <td>@existingCondition.HealthCondition</td>
                    <td>@existingCondition.OtherHealthConditionDescription</td>
                    <td>@(existingCondition.ConditionStartDate.HasValue ? existingCondition.ConditionStartDate.Value.ToString("dd-MMM-yyyy") : string.Empty)</td>                    
                    <td>
                    @if (Model.UserRole.ToLower() == "patient" || Model.UserRole.ToLower() == "doctor")
                    {
                            @Html.ActionLink("Edit", "EditExistingCondition", "Consultation", new { userId = Model.UserId, consultationId = existingCondition.ConsultationId, consultationFamilyHistoryId = existingCondition.Id, excludeSelf = false }, null)
                    }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No existing conditions recorded</p>
    } 
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateExistingCondition", Model.ExistingConditionModelObject)
    }
    <br />
</div>

<button class="collapsible">Illegal Drugs</button>
<div class="content">
    @if (Model.ConsultationIllegalDrugDetailsResponseObject != null
        && Model.ConsultationIllegalDrugDetailsResponseObject.ConsultationIllegalDrugDetailsDisplayList != null
        && Model.ConsultationIllegalDrugDetailsResponseObject.ConsultationIllegalDrugDetailsDisplayList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
            <th>Id</th>
            <th>Consultation Id</th>
            <th>Consume Drugs?</th>
            <th>Drug Name</th>
            <th>Frequency</th>
            <th>Per Frequency</th>
            <th>Action</th>
            </thead>

            @foreach (var illegaldrugDetails in Model.ConsultationIllegalDrugDetailsResponseObject.ConsultationIllegalDrugDetailsDisplayList)
            {
                <tr>
                    <td>@illegaldrugDetails.Id</td>
                    <td>@illegaldrugDetails.ConsultationId</td>
                    <td>@illegaldrugDetails.ConsumeDrugs</td>
                    <td>@illegaldrugDetails.IllegalDrugDesc</td>
                    <td>@illegaldrugDetails.Frequency</td>
                    <td>@illegaldrugDetails.PerFrequency</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditIllegalDrugDetails", "Consultation", new { userId = Model.UserId, consultationId = illegaldrugDetails.ConsultationId, consultationIllegalDrugDetailsId = illegaldrugDetails.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No Illegal Drug consumption recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("IllegalDrugs", Model.IllegalDrugDetailsModelObject)
    }
    <br />
</div>

<button class="collapsible">Smoking Habits</button>
<div class="content">
    @if (Model.ConsultationSDDHabitsResponseObject != null
        && Model.ConsultationSDDHabitsResponseObject.ConsultationSDDHabitsDisplayList != null
        && Model.ConsultationSDDHabitsResponseObject.ConsultationSDDHabitsDisplayList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
            <th>Id</th>
            <th>Consultation Id</th>
            <th>Do you smoke?</th>
            <th>Have you ever smoked?</th>
            <th>Year when you quit smoking</th>
            <th>Frequency(no. of packets)</th>
            <th>Action</th>
            </thead>

            @foreach (var sddhabitDetails in Model.ConsultationSDDHabitsResponseObject.ConsultationSDDHabitsDisplayList)
            {
                <tr>
                    <td>@sddhabitDetails.Id</td>
                    <td>@sddhabitDetails.ConsultationId</td>
                    <td>@sddhabitDetails.DoSmoke</td>
                    <td>@sddhabitDetails.EverSmoked</td>
                    <td>@sddhabitDetails.YearOfQuittingSmoking</td>
                    <td>@sddhabitDetails.SmokingFreq</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditSDDHabits", "Consultation", new { userId = Model.UserId, consultationId = sddhabitDetails.ConsultationId, consultationSDDHabitsId = sddhabitDetails.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No Smoking habits recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("SmokingHabits", Model.SDDHabitsModelObject)
    }
    <br />
</div>

<button class="collapsible">Occupations</button>
<div class="content">
    @if (Model.ConsultationOccupationResponseObject != null
        && Model.ConsultationOccupationResponseObject.ConsultationOccupationList != null
        && Model.ConsultationOccupationResponseObject.ConsultationOccupationList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
                <th>Id</th>
                <th>Consultation Id</th>
                <th>Occupation</th>
                <th>Other Description</th>
                <th>Action</th>
            </thead>

            @foreach (var occupation in Model.ConsultationOccupationResponseObject.ConsultationOccupationList)
            {
                <tr>
                    <td>@occupation.Id</td>
                    <td>@occupation.ConsultationId</td>
                    <td>@occupation.OccupationName</td>
                    <td>@occupation.OtherDescription</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditOccupation", "Consultation", new { userId = Model.UserId, consultationId = occupation.ConsultationId, consultationOccupationId = occupation.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No occupations recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateOccupation", Model.OccupationModelObject)
    }
    <br />
</div>

<button class="collapsible">Blood Pressure Readings</button>
<div class="content">
    @if (Model.ConsultationBloodPressureReadingResponseObject != null
        && Model.ConsultationBloodPressureReadingResponseObject.ConsultationBloodPressureReadingList != null
        && Model.ConsultationBloodPressureReadingResponseObject.ConsultationBloodPressureReadingList.Count() != 0)
    {
        <br />
        <table class="conversations">
            <thead>
                <th>Id</th>
                <th>Consultation Id</th>
                <th>Systolic</th>
                <th>Diastolic</th>
                <th>Timestamp</th>
                <th>Action</th>
            </thead>

            @foreach (var bloodPressureReading in Model.ConsultationBloodPressureReadingResponseObject.ConsultationBloodPressureReadingList)
            {
                <tr>
                    <td>@bloodPressureReading.Id</td>
                    <td>@bloodPressureReading.ConsultationId</td>
                    <td>@bloodPressureReading.Systolic</td>
                    <td>@bloodPressureReading.Diastolic</td>
                    <td>@(bloodPressureReading.Timestamp.HasValue ? bloodPressureReading.Timestamp.Value.ToString("dd-MMM-yyyy") : "")</td>
                    <td>
                        @if (Model.UserRole.ToLower() == "patient")
                        {
                            @Html.ActionLink("Edit", "EditBloodPressureReading", "Consultation", new { userId = Model.UserId, consultationId = bloodPressureReading.ConsultationId, consultationBloodPressureReadingId = bloodPressureReading.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p>No blood pressure reading recorded</p>
    }
    @if (Model.UserRole.ToLower() == "patient")
    {
        @Html.Partial("CreateBloodPressureReading", Model.BloodPressureReadingModelObject)
    }
    <br />
</div>
@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {
            var coll = document.getElementsByClassName("collapsible");
            var i;

            for (i = 0; i < coll.length; i++) {
                coll[i].addEventListener("click", function () {
                    this.classList.toggle("active");
                    var content = this.nextElementSibling;
                    if (content.style.maxHeight) {
                        content.style.maxHeight = null;
                    } else {
                        content.style.maxHeight = content.scrollHeight + "px";
                    }
                });
            }
        });
    </script>

}