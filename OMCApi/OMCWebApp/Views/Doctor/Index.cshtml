@model  OMCWebApp.Models.DoctorModel

<style>
    table.addresses td,
    table.addresses th {
        border: 1px solid black;
    }

    table.createConv {
        border: 1px solid black;
    }

    .collapsible {
        background-color: #777;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

        .collapsible:after {
            content: '\002B';
            color: white;
            font-weight: bold;
            float: right;
            margin-left: 5px;
        }

    .active:after {
        content: "\2212";
    }

    .content {
        padding: 0 18px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
        background-color: #f1f1f1;
    }
</style>
<h2>Doctor Profile Entry</h2>

@using (Html.BeginForm("InsertUpdate", "Doctor"))
{
    @Html.AntiForgeryToken()
    <table>
        <tr>
            <td>
                Select Timezone:
            </td>
            <td>
                @Html.HiddenFor(m => m.DoctorProfileObject.Id, Model.DoctorProfileObject.Id)
                @Html.HiddenFor(m=>m.DoctorProfileObject.DoctorId, Model.DoctorProfileObject.DoctorId)
                @Html.DropDownListFor(m => m.DoctorProfileObject.TimezoneId
                    , new SelectList(Model.Timezones, "Id", "TimezoneDescription"))
            </td>
        </tr>
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Email Address1:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.EmailAddress1, Model.DoctorProfileObject.EmailAddress1)
            </td>

            <td>
                Is Default:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsEmailAddress1Default, new { @class = "chkEmail" })
            </td>
        </tr>    
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Email Address2:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.EmailAddress2, Model.DoctorProfileObject.EmailAddress2)
            </td>

            <td>
                Is Default:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsEmailAddress2Default, new { @class = "chkEmail" })
            </td>
        </tr>      
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Email Address3:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.EmailAddress3, Model.DoctorProfileObject.EmailAddress3)
            </td>

            <td>
                Is Default:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsEmailAddress3Default, new { @class = "chkEmail" })
            </td>
        </tr>     
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Phone number 1:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.PhoneNumber1, Model.DoctorProfileObject.PhoneNumber1)
            </td>

            <td>
                Is Default:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsPhoneNumber1Default, new { @class = "chkPhone" })
            </td>
        </tr>      
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Phone number 2:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.PhoneNumber2, Model.DoctorProfileObject.PhoneNumber2)
            </td>

            <td>
                Is Default:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsPhoneNumber2Default, new { @class = "chkPhone" })
            </td>
        </tr>  
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Phone number 3:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.PhoneNumber3, Model.DoctorProfileObject.PhoneNumber3)
            </td>

            <td>
                Is Default:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsPhoneNumber3Default, new { @class = "chkPhone" })
            </td>
        </tr>      
        <tr style="height:20px;"></tr>
        <tr>
            <td>
                Website Address:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DoctorProfileObject.WebsiteAddress, Model.DoctorProfileObject.WebsiteAddress)
            </td>
        </tr>          
        <tr style="height:20px;"></tr>        
        <tr>            
            <td>
                Is Published:
            </td>
            <td>
                @Html.CheckBoxFor(m => m.DoctorProfileObject.IsPublished, Model.DoctorProfileObject.IsPublished)
            </td>
        </tr>
        <tr style="height:20px;"></tr>
        <tr>
            <td colspan="2">
                <button type="submit">@(Model.DoctorProfileObject.Id > 0 ? "Update" : "Create")</button>
                @if (Model.DoctorProfileObject.Id > 0)
                {
                    <button type="button" onclick="deleteProfile(@(Model.DoctorProfileObject.Id), @(Model.UserId))">Delete</button>
                }
            </td>
        </tr>

    </table>
    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Address", "UserAddress", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Addresses</button>                
                <div class="content">
                    @if (Model.UserAddressResponseObject != null
                        && Model.UserAddressResponseObject.UserAddressList != null
                        && Model.UserAddressResponseObject.UserAddressList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>Address Type</th>
                                <th>Address 1</th>
                                <th>Address 2</th>
                                <th>City</th>
                                <th>Zipcode</th>
                                <th>State</th>
                                <th>Country</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var address in Model.UserAddressResponseObject.UserAddressList)
                            {
                                <tr>
                                    <td>@address.AddressType</td>
                                    <td>@address.Address1</td>
                                    <td>@address.Address2</td>
                                    <td>@address.City</td>
                                    <td>@address.ZipCode</td>
                                    <td>@address.StateName</td>
                                    <td>@address.CountryName</td>
                                    <td>
                                        @Html.ActionLink("Edit Address", "UserAddress", "Doctor"
                                        , new { doctorId = Model.DoctorProfileObject.DoctorId
                                                , userAddressId = address.Id
                                                , userId = Model.UserId }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No addresses recorded</p>
                    }
                </div>
            </td>
        </tr>  
        <tr style="height:20px;"></tr>
    </table>

    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Award", "DoctorAward", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Awards</button>
                <div class="content">
                    @if (Model.DoctorAwardsResponseObject != null
                    && Model.DoctorAwardsResponseObject.DoctorAwardsList != null
                    && Model.DoctorAwardsResponseObject.DoctorAwardsList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>Year Received</th>
                                <th>Institution Name</th>
                                <th>Award Name</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var doctorAward in Model.DoctorAwardsResponseObject.DoctorAwardsList)
                            {
                                <tr>
                                    <td>@doctorAward.YearReceived</td>
                                    <td>@doctorAward.InstitutionName</td>
                                    <td>@doctorAward.AwardName</td>
                                    <td>
                                        @Html.ActionLink("Edit Award", "DoctorAward", "Doctor"
                                        , new
                                        {
                                            doctorId = Model.DoctorProfileObject.DoctorId,
                                            doctorAwardId = doctorAward.Id,
                                            userId = Model.UserId
                                        }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No awards recorded</p>
                    }
                </div>
            </td>
        </tr>
        <tr style="height:20px;"></tr>
    </table>

    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Board", "DoctorBoard", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Boards</button>
                <div class="content">
                    @if (Model.DoctorBoardResponseObject != null
                        && Model.DoctorBoardResponseObject.DoctorBoardList != null
                        && Model.DoctorBoardResponseObject.DoctorBoardList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>Licensed In</th>
                                <th>Other Description</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var doctorBoard in Model.DoctorBoardResponseObject.DoctorBoardList)
                            {
                                <tr>
                                    <td>@doctorBoard.BoardName</td>
                                    <td>@doctorBoard.OtherDescription</td>
                                    <td>
                                        @Html.ActionLink("Edit Board", "DoctorBoard", "Doctor"
                                        , new
                                        {
                                            doctorId = Model.DoctorProfileObject.DoctorId,
                                            doctorBoardId = doctorBoard.Id,
                                            userId = Model.UserId
                                        }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No boards recorded</p>
                    }
                </div>
            </td>
        </tr>
        <tr style="height:20px;"></tr>
    </table>

    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Education", "DoctorEducation", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Educations</button>
                <div class="content">
                    @if (Model.DoctorEducationResponseObject != null
                        && Model.DoctorEducationResponseObject.DoctorEducationList != null
                        && Model.DoctorEducationResponseObject.DoctorEducationList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>From</th>
                                <th>To</th>
                                <th>College Name</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Country</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var doctorEducation in Model.DoctorEducationResponseObject.DoctorEducationList)
                            {
                                <tr>
                                    <td>@doctorEducation.BeginingYear</td>
                                    <td>@doctorEducation.EndingYear</td>
                                    <td>@doctorEducation.CollegeName</td>
                                    <td>@doctorEducation.City</td>
                                    <td>@doctorEducation.StateName</td>
                                    <td>@doctorEducation.CountryName</td>
                                    <td>
                                        @Html.ActionLink("Edit Education", "DoctorEducation", "Doctor"
                                        , new
                                        {
                                            doctorId = Model.DoctorProfileObject.DoctorId,
                                            doctorEducationId = doctorEducation.Id,
                                            userId = Model.UserId
                                        }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No educations recorded</p>
                    }
                </div>
            </td>
        </tr>
        <tr style="height:20px;"></tr>
    </table>

    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Fellowship", "DoctorFellowship", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Fellowships</button>
                <div class="content">
                    @if (Model.DoctorFellowshipResponseObject != null
                    && Model.DoctorFellowshipResponseObject.DoctorFellowshipList != null
                    && Model.DoctorFellowshipResponseObject.DoctorFellowshipList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>From</th>
                                <th>To</th>
                                <th>Hospital Name</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Country</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var doctorFellowship in Model.DoctorFellowshipResponseObject.DoctorFellowshipList)
                            {
                                <tr>
                                    <td>@doctorFellowship.BeginingYear</td>
                                    <td>@doctorFellowship.EndingYear</td>
                                    <td>@doctorFellowship.HospitalName</td>
                                    <td>@doctorFellowship.City</td>
                                    <td>@doctorFellowship.StateName</td>
                                    <td>@doctorFellowship.CountryName</td>
                                    <td>
                                        @Html.ActionLink("Edit Fellowship", "DoctorFellowship", "Doctor"
                                        , new
                                        {
                                            doctorId = Model.DoctorProfileObject.DoctorId,
                                            doctorFellowshipId = doctorFellowship.Id,
                                            userId = Model.UserId
                                        }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No Fellowships recorded</p>
                    }
                </div>
            </td>
        </tr>
        <tr style="height:20px;"></tr>
    </table>

    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Image", "DoctorImage", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Images</button>
                <div class="content">
                    @if (Model.DoctorImagesResponseObject != null
                    && Model.DoctorImagesResponseObject.DoctorImagesList != null
                    && Model.DoctorImagesResponseObject.DoctorImagesList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>File Name</th>
                                <th>Is Primary</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var doctorImage in Model.DoctorImagesResponseObject.DoctorImagesList)
                            {
                                <tr>
                                    <td>@doctorImage.FileName</td>
                                    <td>@(doctorImage.IsPrimary ? "Yes" : "No")</td>
                                    <td>
                                        @Html.ActionLink("Edit Image", "DoctorImage", "Doctor"
                                        , new
                                        {
                                            doctorId = Model.DoctorProfileObject.DoctorId,
                                            doctorImageId = doctorImage.Id,
                                            userId = Model.UserId
                                        }, null)
                                        &nbsp;
                                        @Html.ActionLink("View Image", "DownLoadFile", "Doctor"
                                        , new
                                        {
                                            doctorImageId = doctorImage.Id
                                        }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No Images recorded</p>
                    }
                </div>
            </td>
        </tr>
        <tr style="height:20px;"></tr>
    </table>

    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Create New Residency", "DoctorResidency", "Doctor"
               , new { doctorId = Model.DoctorProfileObject.DoctorId, userId = Model.UserId }, null)
                <button type="button" class="collapsible">Residencys</button>
                <div class="content">
                    @if (Model.DoctorResidencyResponseObject != null
                        && Model.DoctorResidencyResponseObject.DoctorResidencyList != null
                        && Model.DoctorResidencyResponseObject.DoctorResidencyList.Count() != 0)
                    {
                        <table class="addresses">
                            <thead>
                                <th>From</th>
                                <th>To</th>
                                <th>Hospital Name</th>
                                <th>City</th>
                                <th>State</th>
                                <th>Country</th>
                                <th>Action</th>
                            </thead>
                            @foreach (var doctorResidency in Model.DoctorResidencyResponseObject.DoctorResidencyList)
                            {
                                <tr>
                                    <td>@doctorResidency.BeginingYear</td>
                                    <td>@doctorResidency.EndingYear</td>
                                    <td>@doctorResidency.HospitalName</td>
                                    <td>@doctorResidency.City</td>
                                    <td>@doctorResidency.StateName</td>
                                    <td>@doctorResidency.CountryName</td>
                                    <td>
                                        @Html.ActionLink("Edit Residency", "DoctorResidency", "Doctor"
                                        , new
                                        {
                                            doctorId = Model.DoctorProfileObject.DoctorId,
                                            doctorResidencyId = doctorResidency.Id,
                                            userId = Model.UserId
                                        }, null)
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No Residencys recorded</p>
                    }
                </div>
            </td>
        </tr>
        <tr style="height:20px;"></tr>
    </table>
}

@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {
            $('.chkEmail').change(function (event) {
                resetOtherCheckboxes('chkEmail', $(event.target))
            });
            $('.chkPhone').change(function (event) {
                resetOtherCheckboxes('chkPhone', $(event.target))
            });

            var coll = document.getElementsByClassName("collapsible");
            var i;

            for (i = 0; i < coll.length; i++) {
                coll[i].addEventListener("click", function () {
                    this.classList.toggle("active");
                    var content = this.nextElementSibling;
                    if (content.style.maxHeight) {
                        content.style.maxHeight = null;
                    } else {
                        content.style.maxHeight = content.scrollHeight + "px";
                    }
                });
            }
        });

        function resetOtherCheckboxes(className, element) {
            if (element.prop("checked")) {
                $('.' + className).each(function (i, obj) {
                    $(this).prop("checked", false);
                });
                element.prop("checked", true);
            }
        }

        function deleteProfile(doctorProfileId, deletedBy) {
            $.ajax({
                type: 'POST',
                url: '/deleteDoctorProfile?doctorProfileId=' + doctorProfileId + '&userId='+deletedBy,
                dataType: "json",
                success: function (result) {
                    if (result.IsSuccess) {
                        window.location = '/deleteDoctorProfileResponse?message=' + result.Message + '&isSuccess=true';
                    }
                }
            });
        }
    </script>

}
